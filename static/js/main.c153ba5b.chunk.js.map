{"version":3,"sources":["component/Square.js","component/Table.js","component/List.js","component/Knapsack.js","component/Form.js","component/Status.js","App.js","serviceWorker.js","index.js"],"names":["Square","props","className","isInProcess","isReffered","isBaseReffered","isProcessed","value","useStyles","makeStyles","theme","createStyles","margin","extendedIcon","marginRight","spacing","Table","classes","useState","Array","fill","map","table","setTable","knapsackCap","numOfItems","items","length","setReffered","i","j","bool","newTable","setBaseReffered","rec","intervalTime","currIndex","prevIndex","refferdIndex","refferdBaseIndex","setMaxValue","setStatus","includedTrue","setInProcess","knapsackVal","weight","setTimeout","renderRow","key","square","renderSquare","cap","row","push","renderCaptionRow","Button","variant","size","color","onClick","scanTable","includedAllFalse","width","minWidth","ItemList","createMuiTheme","palette","type","primary","main","secondary","tonalOffset","ThemeProvider","Grid","container","justify","aria-label","TableHead","TableRow","TableCell","align","TableBody","item","hover","isIncluded","CheckBox","fontSize","CheckBoxOutlineBlank","IconButton","deleteItem","Delete","root","textAlign","display","valuetext","Knapsack","xs","Typography","id","gutterBottom","Slider","onChange","e","val","parseInt","setKnapsackCap","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","min","max","button","form","Form","weightInput","useRef","newItem","setNewItem","handleAdd","addItem","handleKeyDown","preventDefault","current","focus","noValidate","autoComplete","style","TextField","label","target","replace","inputRef","onKeyDown","Status","comment","status","maxValue","Copyright","Link","href","Date","getFullYear","flexDirection","minHeight","backgroundColor","grey","marginTop","marginBottom","footer","padding","Contents","setItems","CssBaseline","Container","component","maxWidth","newItems","splice","forEach","Boolean","window","location","hostname","match","ReactDOM","render","list","success","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c153ba5b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Square = (props) => {\n    let className = props.isInProcess ? \"isInProcess\" : \"\";\n    className = props.isReffered ? className + \" isReffered\" : className;\n    className = props.isBaseReffered ? className + \" isBaseReffered\" : className;\n\n    return (\n        <td className={className}>\n            {props.isProcessed ? props.value : \"\"}\n        </td>\n    )\n}\n\nexport default Square;","import React, { useState } from 'react';\nimport Square from './Square';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        margin: {\n            margin: '10px 5%',\n        },\n        extendedIcon: {\n            marginRight: theme.spacing(1),\n        },\n    }),\n);\n\nconst initialSquare = () => ({\n    value: 0,\n    isInProcess: false,\n    isProcessed: false,\n    isReffered: false,\n    isBaseReffered: false\n})\n\nconst Table = (props) => {\n    const classes = useStyles();\n\n    const [table, setTable] = useState(\n        Array(10).fill(0).map(() =>\n            Array(11).fill(initialSquare()))\n    );\n\n    const knapsackCap = props.knapsackCap;\n    const numOfItems = props.items.length;\n\n    // table[i][j]のisInProcessだけ入力のbool値に更新\n    const setInProcess = (i, j, bool) => {\n        const newTable = [...table];\n        newTable[i][j] = { ...table[i][j], isInProcess: bool }\n        setTable(newTable);\n    };\n\n    // table[i][j]のisRefferedだけ入力のbool値に更新\n    const setReffered = (i, j, bool) => {\n        const newTable = [...table];\n        newTable[i][j] = { ...table[i][j], isReffered: bool }\n        setTable(newTable);\n    };\n\n    // table[i][j]のisBaseRefferedだけ入力のbool値に更新\n    const setBaseReffered = (i, j, bool) => {\n        const newTable = [...table];\n        newTable[i][j] = { ...table[i][j], isBaseReffered: bool }\n        setTable(newTable);\n    };\n\n    const resetTable = () => {\n        props.includedAllFalse();\n        props.setStatus(\"\");\n        props.setReffered(0, 0, false);\n        setTable(Array(10).fill(0).map(() =>\n            Array(11).fill(initialSquare())))\n    }\n\n    const rec = (intervalTime, currIndex, prevIndex, refferdIndex, refferdBaseIndex) => {\n        if (currIndex.i === numOfItems) {\n            props.setMaxValue(table[prevIndex.i][prevIndex.j].value)\n            props.setStatus(\"COMPLETE\");\n            return;\n        }\n        props.includedTrue(currIndex.i);\n        // ひとつ前の処理のハイライトの初期化\n        setInProcess(prevIndex.i, prevIndex.j, false);\n        setReffered(refferdIndex.i, refferdIndex.j, false);\n        setBaseReffered(refferdBaseIndex.i, refferdBaseIndex.j, false);\n        props.setReffered(currIndex.i, false);\n        // 更新のための新しいtable\n        const newTable = [...table];\n        let knapsackVal;\n        if (currIndex.j >= props.items[currIndex.i].weight) {\n            //　itemがknapsackに入る場合\n            // 参照するマスの指定とハイライト\n            refferdIndex = { i: currIndex.i, j: currIndex.j - props.items[currIndex.i].weight };\n            setReffered(refferdIndex.i, refferdIndex.j, true);\n            refferdBaseIndex = { i: currIndex.i, j: currIndex.j };\n            setBaseReffered(refferdBaseIndex.i, refferdBaseIndex.j, true);\n            props.setReffered(currIndex.i, true);\n            // itemをknapsackに入れるべきか評価する\n            if (newTable[currIndex.i][currIndex.j - props.items[currIndex.i].weight].value + props.items[currIndex.i].value >= newTable[currIndex.i][currIndex.j].value) {\n                // itemをknapsackに入れたほうが得な場合\n                knapsackVal = newTable[currIndex.i][currIndex.j - props.items[currIndex.i].weight].value + props.items[currIndex.i].value;\n                props.setStatus(\"PROFIT\");\n            } else {\n                // itemをknapsackに入れると損な場合\n                knapsackVal = newTable[currIndex.i][currIndex.j].value\n                props.setStatus(\"LOSS\");\n            }\n        } else {\n            // itemがknapsackに入らない場合\n            knapsackVal = newTable[currIndex.i][currIndex.j].value;\n            props.setStatus(\"OVER\");\n        }\n        // 評価結果をもとにtableを更新\n        newTable[currIndex.i + 1][currIndex.j] = {\n            value: knapsackVal,\n            isInProcess: true,\n            isProcessed: true,\n            isReffered: false,\n            isBaseReffered: false\n        };\n        setTable(newTable)\n        // 次のマスへindexを更新\n        prevIndex.i = currIndex.i + 1; // 参照渡しみたいなので分割して代入しないと\n        prevIndex.j = currIndex.j; // prevとcurrが同期してしまう。\n        currIndex.j += 1;\n        if (currIndex.j === knapsackCap + 1) {\n            currIndex.j = 0;\n            currIndex.i += 1;\n        }\n        setTimeout(() => rec(intervalTime, currIndex, prevIndex, refferdIndex, refferdBaseIndex), intervalTime)\n    }\n\n    // isInProcessのマスを0.1sec毎に走査する関数\n    const scanTable = () => {\n        const intervalTime = 300;\n        let currIndex = { i: 0, j: 0 };\n        let prevIndex = { i: numOfItems, j: knapsackCap };\n        let refferdIndex = { i: 0, j: 0 }; //アイテムを入れたあまりを最適化するボックス\n        let refferdBaseIndex = { i: 0, j: 0 }; //一つ左のボックス\n\n        // 新しいtableを用意\n        const newTable = [...table];\n        // 1行目を初期化\n        for (var j = 0; j <= knapsackCap; j++) {\n            newTable[0][j] = { ...newTable[0][j], isProcessed: true }\n        }\n        setTable(newTable);\n        // 再帰関数の呼び出し\n        rec(intervalTime, currIndex, prevIndex, refferdIndex, refferdBaseIndex)\n    }\n\n    // マスを描画する関数\n    const renderSquare = (square, i, j) => {\n        return (\n            <Square\n                key={i * 11 + j}\n                value={square.value}\n                isInProcess={square.isInProcess}\n                isProcessed={square.isProcessed}\n                isReffered={square.isReffered}\n                isBaseReffered={square.isBaseReffered}\n            />\n        )\n    };\n\n    // tableのi行目を描画する関数\n    const renderRow = (i) => {\n        return (\n            <tr key={i}>\n                {i === 0 ? <th className=\"row-caption\">空の状態</th> : <th className=\"row-caption\">item {i}</th>}\n                {table[i].map((square, j) => renderSquare(square, i, j))}\n            </tr>\n        )\n    }\n\n    const renderCaptionRow = (cap) => {\n        const row = [<th className=\"row-caption\" key={-1}></th>];\n        for (var i = 0; i <= cap; i++) {\n            row.push(<th className=\"col-caption\" key={i}>{i}</th>)\n        }\n        return (\n            <tr>{row}</tr>\n        )\n    };\n\n    return (\n        <div>\n            <table className=\"dp-table\">\n                <tbody>\n                    {renderCaptionRow(10)}\n                    {table.map((row, i) => renderRow(i))}\n                </tbody>\n            </table>\n            <Button variant=\"outlined\" size=\"medium\" color=\"primary\" onClick={() => scanTable()} className={classes.margin}>\n                START\n            </Button>\n            <Button variant=\"outlined\" size=\"medium\" color=\"secondary\" onClick={() => resetTable()} className={classes.margin}>\n                RESET\n            </Button>\n        </div>\n    );\n}\n\nexport default Table;","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Delete, CheckBox, CheckBoxOutlineBlank } from '@material-ui/icons';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grid from '@material-ui/core/Grid';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        table: {\n            width: '50%',\n            minWidth: '500px',\n            margin: '4ch',\n        },\n    }),\n);\n\nconst ItemList = (props) => {\n    const classes = useStyles();\n\n    const theme = createMuiTheme({\n        palette: {\n            type: 'dark',\n            primary: {\n                main: '#eeff41',\n            },\n            secondary: {\n                main: '#eeff41',\n            },\n            tonalOffset: 0.2,\n        },\n    });\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Grid container justify=\"center\" spacing={0}>\n                <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow className={classes.row}>\n                            <TableCell></TableCell>\n                            <TableCell align=\"center\">Item</TableCell>\n                            <TableCell align=\"center\">Weight</TableCell>\n                            <TableCell align=\"center\">Value</TableCell>\n                            <TableCell align=\"center\"></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {props.items.map((item, i) => (\n                            <TableRow className={classes.row} hover={true} key={i}>\n                                {item.isIncluded\n                                    ? <TableCell align=\"center\" >\n                                        <CheckBox fontSize=\"small\" className={classes.margin} color=\"primary\" />\n                                    </TableCell>\n                                    : <TableCell align=\"center\" >\n                                        <CheckBoxOutlineBlank fontSize=\"small\" className={classes.margin} />\n                                    </TableCell>\n                                }\n                                <TableCell align=\"center\" className={item.isIncluded ? \"included\" : \"\"}>{i + 1}</TableCell>\n                                <TableCell align=\"center\">{item.weight}</TableCell>\n                                <TableCell align=\"center\" className={item.isReffered ? \"reffered\" : \"\"}>{item.value}</TableCell>\n                                <TableCell align=\"center\">\n                                    <IconButton aria-label=\"delete\" className={classes.margin} onClick={() => props.deleteItem(i)} size=\"small\">\n                                        <Delete fontSize=\"small\" />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Grid >\n        </ThemeProvider>\n    )\n};\n\nexport default ItemList;","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            margin: '30px',\n            width: '50%',\n            minWidth: '500px',\n            textAlign: 'center',\n            display: 'inline-block'\n        },\n    }),\n);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\nconst Knapsack = (props) => {\n    const classes = useStyles();\n\n    const handleChange = (cap) => {\n        cap = parseInt(cap)\n        if (cap >= 10) {\n            //alert(\"Knapsack容量は10以下で設定してください\")\n            props.setKnapsackCap(10);\n            return;\n        }\n        props.setKnapsackCap(cap);\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container justify=\"center\" spacing={3}>\n                {/* <Grid item xs={12}></Grid>\n                <Grid item xs={4}></Grid> */}\n                <Grid item xs={12}>\n                    <Typography id=\"discrete-slider\" gutterBottom align=\"left\">\n                        Knapsack Capacity\n                </Typography>\n                </Grid>\n                {/* <Grid item xs={4}></Grid> */}\n                <Grid item xs={12}>\n                    <Slider\n                        value={props.knapsackCap}\n                        onChange={(e, val) => handleChange(val)}\n                        getAriaValueText={valuetext}\n                        aria-labelledby=\"discrete-slider\"\n                        valueLabelDisplay=\"on\"\n                        step={1}\n                        marks\n                        min={0}\n                        max={10}\n                    />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Knapsack;","import React, { useState, useRef } from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleOutline from '@material-ui/icons/AddCircleOutline';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            width: '50%',\n            minWidth: '500px',\n            textAlign: 'center',\n            display: 'inline-block'\n        },\n        button: {\n            margin: theme.spacing(1),\n        },\n        form: {\n            '& > *': {\n                width: '100%',\n            },\n        },\n    }),\n);\n\nconst Form = (props) => {\n    const classes = useStyles();\n    const weightInput = useRef(null);\n\n    const [newItem, setNewItem] = useState({ weight: '', value: '' });\n\n    const handleAdd = (weight, value) => {\n        if (weight !== '' && value !== '') {\n            props.addItem(parseInt(weight), parseInt(value));\n            setNewItem({ weight: '', value: '' })\n        }\n    }\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault() // defaultでページreloadが入る\n            handleAdd(newItem.weight, newItem.value);\n            weightInput.current.focus();\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container justify=\"center\" spacing={3}>\n                <Grid item xs={5}>\n                    <form className={classes.form} noValidate autoComplete=\"off\" style={{ display: 'inline-block' }} >\n                        <TextField\n                            id=\"standard-basic\"\n                            label=\"Weight\"\n                            value={newItem.weight}\n                            onChange={(e) => setNewItem({ weight: e.target.value.replace(/\\D/, ''), value: newItem.value })}\n                            inputRef={weightInput}\n                            onKeyDown={(e) => handleKeyDown(e)}\n                        />\n                    </form>\n                </Grid>\n                <Grid item xs={5}>\n                    <form className={classes.form} noValidate autoComplete=\"off\" style={{ display: 'inline-block' }} >\n\n                        <TextField\n                            id=\"standard-basic\"\n                            label=\"Value\"\n                            value={newItem.value}\n                            onChange={(e) => setNewItem({ weight: newItem.weight, value: e.target.value.replace(/\\D/, '') })}\n                            onKeyDown={(e) => handleKeyDown(e)}\n                        />\n                    </form>\n                </Grid>\n                <Grid item xs={2}>\n                    <IconButton aria-label=\"delete\" className={classes.button} size=\"medium\" color=\"secondary\" onClick={() => handleAdd(newItem.weight, newItem.value)} >\n                        <AddCircleOutline fontSize=\"default\" />\n                    </IconButton>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Form;\n","import React from 'react';\n\nconst Status = (props) => {\n    var comment;\n    switch (props.status) {\n        case \"OVER\":\n            comment = \"Itemがナップサックに入りません。\"\n            break;\n        case \"LOSS\":\n            comment = \"Itemをナップサックに入れると損です。\"\n            break;\n        case \"PROFIT\":\n            comment = \"Itemをナップサックに入れると得です。\"\n            break;\n        case \"COMPLETE\":\n            comment = \"ナップサックに詰められる価値は最大で\" + props.maxValue + \"です。\"\n            break;\n        default:\n            comment = \"\"\n    }\n    return (\n        <div className=\"status\">\n            {comment}\n        </div>\n    )\n};\n\nexport default Status;","import React, { useState } from 'react';\nimport Table from './component/Table';\nimport ItemList from './component/List';\nimport Knapscak from './component/Knapsack';\nimport Form from './component/Form';\nimport Status from './component/Status';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Silurus\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[900],\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[900],\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\n  },\n}));\n\nconst Contents = (theme) => {\n  const [items, setItems] = useState([])\n  const [knapsackCap, setKnapsackCap] = useState(8);\n  const [status, setStatus] = useState(\"\");\n  const [maxValue, setMaxValue] = useState(0);\n\n  const addItem = (weight, value) => {\n    let newItems = [...items, { weight: weight, value: value, isIncluded: false }];\n    setItems(newItems);\n  }\n\n  const deleteItem = (i) => {\n    let newItems = [...items];\n    newItems.splice(i, 1);\n    setItems(newItems);\n  }\n\n  const includedTrue = (i) => {\n    let newItems = [...items];\n    newItems[i].isIncluded = true;\n    setItems(newItems);\n  }\n\n  const includedAllFalse = () => {\n    let newItems = [...items];\n    newItems.forEach(item => item.isIncluded = false);\n    setItems(newItems);\n  }\n\n  const setReffered = (i, bool) => {\n    let newItems = [...items];\n    newItems.forEach(item => item.isReffered = false);\n    newItems[i].isReffered = bool;\n    setItems(newItems);\n  }\n\n  const classes = useStyles(theme);\n  return (\n    <Grid container spacing={0}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Container component=\"main\" className={classes.main} maxWidth={false}>\n          <Typography variant=\"h4\" component=\"h2\" gutterBottom align=\"center\">\n            Knapsack Problem\n          </Typography>\n          < div className=\"App\" >\n            <Knapscak knapsackCap={knapsackCap} setKnapsackCap={setKnapsackCap} />\n            <Form addItem={addItem} />\n            <ItemList items={items} deleteItem={deleteItem} />\n            <Status\n              status={status}\n              maxValue={maxValue} />\n            <Table\n              items={items}\n              knapsackCap={knapsackCap}\n              includedTrue={includedTrue}\n              includedAllFalse={includedAllFalse}\n              setReffered={setReffered}\n              setStatus={setStatus}\n              maxValue={maxValue}\n              setMaxValue={setMaxValue}\n            />\n          </div>\n        </Container>\n        <footer className={classes.footer}>\n          <Container maxWidth=\"sm\">\n            <Typography variant=\"body1\">Hope this helps you to understand dp.</Typography>\n            <Copyright />\n          </Container>\n        </footer>\n      </div>\n    </Grid>\n  )\n}\n\nexport default function App() {\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        main: '#80d8ff',\n        list: '#eeff41',\n      },\n      secondary: {\n        main: '#ff80ab',\n      },\n      success: {\n        main: '#eeff41',\n      },\n      tonalOffset: 0.2,\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Contents />\n    </ThemeProvider>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}